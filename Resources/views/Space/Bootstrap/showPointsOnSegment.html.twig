{% block segment %}
<script>
// Get the ul that holds the collection of tags
var collectionHolder = $('ul[class^="subtypes_"]');

// setup an "add a tag" link
var addTagLinkClass = 'add_tag_link';
var $addTagLink = $('<a href="#">Add a tag</a>').addClass(addTagLinkClass);
var addNewLiClass = 'add_new_li';
var $newLinkLi = $('<li></li>').addClass(addNewLiClass).append($addTagLink);

jQuery(document).ready(function() {
    // add the "add a tag" anchor and li to the tags ul

    collectionHolder.find('a.'+addTagLinkClass).each(function() {
        $(this).attr('id',collectionHolder.has(this).attr('class'));
    });
    
    // add a delete link to all of the existing tag form li elements
    collectionHolder.find('li').each(function() {
        if(!$(this).hasClass(addNewLiClass))
        addTagFormDeleteLink($(this));
    });

    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    collectionHolder.data('index', collectionHolder.find(':input').length);

    $('.'+addTagLinkClass).on('click', function(e) {
        // prevent the link from creating a "#" on the URL
        e.preventDefault();

        // add a new tag form (see next code block)
        addTagForm(collectionHolder.has(this), $(this));
    });
});
function addTagForm(collectionHolder, $newLinkLi) {
    // Get the data-prototype explained earlier
    var prototype = collectionHolder.data('prototype');

    // get the new index
    var index = collectionHolder.data('index');

    // Replace '__name__' in the prototype's HTML to
    // instead be a number based on how many items we have
    var newForm = prototype.replace(/__name__/g, index);

    // increase the index with one for the next item
    collectionHolder.data('index', index + 1);

    // Display the form in the page in an li, before the "Add a tag" link li
    var $newFormLi = $('<li></li>').append(newForm);
    $newLinkLi.before($newFormLi);
    
    // add a delete link to the new form
    addTagFormDeleteLink($newFormLi);
}
function addTagFormDeleteLink($tagFormLi) {
    var $removeFormA = $('<a href="#">delete this tag</a>');
    $tagFormLi.append($removeFormA);

    $removeFormA.on('click', function(e) {
        // prevent the link from creating a "#" on the URL
        e.preventDefault();

        // remove the li for the tag form
        $tagFormLi.remove();
    });
}
</script>
{# <form action="..." method="POST" {{ form_enctype(form) }}>
    {% for type in types %}
        {{type.name}}
    <ul class="tags" data-prototype="{{ form_widget(form.subtypes.vars.prototype)|e }}">
        {% for subtype in type.subtypes %}
            
           <input type="hidden" name="id" value="{{subtype.id}}">
            <input name="id" value="{{subtype.pointsCount}}">
            <input name="hidden" value="{{subtype.typeId}}">
           <li>{{ form_widget(form.subtype) }}</li>
            <li>{{ form_row(subtype.pointsCount) }}</li>
            <li>{{ form_row(subtype.percent) }}</li>
            <li>{{ form_row(subtype.block) }}</li>
            <li>{{ form_row(subtype.restore) }}</li>
        {% endfor %}
    </ul>
    {% endfor %}
    {{ form_rest(form) }}
</form>#}
{% for type in types %}

            <form class="form-search ajaxForm" action="{{ path('save_subtype', { 'typeId': type.id }) }}" method="post">                          
                <div class="controls controls-row">
                    {{ form_widget(typesForm[type.id].name) }}
                        <ul class="subtypes_{{type.id}}" data-prototype="{{ form_widget(typesForm[type.id].subtypes.vars.prototype)|e }}">
                            {% for subtype in typesForm[type.id].subtypes %}
                                <li>{{ form_widget(subtype) }}</li>
                            {% endfor %}
                                <li class="add_new_li"><a href="#" class="add_tag_link"  id="typeId_{{ type.id }}">Add a tag</a></li>    
                        </ul>
                    <a class="btn" id="sendAjaxForm">Save</a>
                </div>
                {{ form_rest(typesForm[type.id]) }}
            </form>

{% endfor %}



 {#% for pointType in pointsType %}
    <pre class="prettyprint">{{pointType.name}}</pre>
    
    {% if subtypeEntities[pointType.id] is defined %}
        {% for entity in subtypeEntities[pointType.id] %}
            <form class="form-search ajaxForm" action="{{ path('update_subtype', { 'id': entity.id }) }}" method="post">                          
                <div class="controls controls-row">
                    {{ form_widget(updateSubtypeForm[entity.id].pointsCount) }}
                    {{ form_widget(updateSubtypeForm[entity.id].percent) }}   
                    {{ form_widget(updateSubtypeForm[entity.id].block, { 'attr': {'id': entity.id} }) }}
                    {{ form_widget(updateSubtypeForm[entity.id].restore, { 'attr': {'id': entity.id} }) }}
                    <a class="btn">Update</a>
                </div>
                {{ form_rest(updateSubtypeForm[entity.id]) }}
            </form>
            <form action="" method="post">
                {{ form_rest( deleteSubtypeForm[entity.id] ) }}
                <a class="btn">Delete</a>
            </form>  
        {% endfor%}
    {% endif %}
    
    <form class="form-search ajaxForm" id="{{pointType.id}}" action="{{ path('create_subtype', { 'typeId': pointType.id }) }}" method="post">                          
        <div class="controls controls-row">
            {{ form_widget(newSubtypeForm[pointType.id].pointsCount) }}
            {{ form_widget(newSubtypeForm[pointType.id].percent) }}
            {{ form_widget(newSubtypeForm[pointType.id].block, { 'attr': {'id': loop.index} }) }}
            {{ form_widget(newSubtypeForm[pointType.id].restore, { 'attr': {'id': loop.index} }) }}
            <a class="btn">Save</a>
        </div>
        {{ form_rest(newSubtypeForm[pointType.id]) }}
    </form>
    
{% endfor%#}

{% endblock %}
